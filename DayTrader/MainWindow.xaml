<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DayTrader"
        mc:Ignorable="d" 
        Title="Daytrade scanner v2.5"  Width="900" Height="480"
        x:Class="DayTrader.MainWindow">
    <Window.Resources>
        <local:PercentageToBrushConverter x:Key="brushConverter"/>

        <Style x:Key="ChangedCellStyle" TargetType="DataGridCell">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="00:00:04" Storyboard.TargetName="myTxt"
                                        Storyboard.TargetProperty="(DataGridCell.Background).(SolidColorBrush.Color)" 
                                        From="Gold"  AutoReverse="True" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>

                        <TextBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"
                             Name="myTxt" >
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=DataContext.SourceUpdating}" Value="True">
                                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Content.Text,NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=DataContext.SourceUpdating}" Value="False">
                                            <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Content.Text}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="MyStyle">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="Transparent"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard HandoffBehavior="Compose">
                        <Storyboard TargetProperty="(TextBlock.Background).(SolidColorBrush.Color)">
                            <ColorAnimation Duration="0:0:0.10" To="Gold" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        
        <StackPanel Orientation="Horizontal" Background="#cccccc">
            <Menu Margin="5,5,5,5">
                <MenuItem Header="File">
                    <MenuItem Header="Settings" Name="menuItemSettings"/>
                    <MenuItem Header="Quit"  Name="menuItemQuit"/>
                </MenuItem>
            </Menu>
        </StackPanel>

        <Grid Grid.Row="1" Margin="5,5,5,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Button Name="btnStart"  Content="{Binding StartButton}" Grid.Column="0" />
            <Button Name="btnDonate" Content="Donate"  Grid.Column="3" />
        </Grid>

        <Grid Grid.Row="2" Margin="5,5,0,0">
            <TabControl>
                <TabItem Header="Signals">
                    <DataGrid Name = "dataGrid" AlternatingRowBackground = "LightBlue"  
         AlternationCount = "2" AutoGenerateColumns="False" IsReadOnly="True"  ItemsSource="{Binding Signals}" SelectionUnit="Cell">

                        <DataGrid.Columns>
                            <DataGridTextColumn Header = "Date" Binding = "{Binding Date}" Width="100" />
                            <DataGridTextColumn Header = "Symbol" Binding = "{Binding Symbol}" Width="60"/>
                            <DataGridTextColumn Header = "Trade" Binding = "{Binding Trade}" Width="80"/>
                            <DataGridTextColumn Header = "TimeFrame" Binding = "{Binding TimeFrame}" Width="90"/>
                            <DataGridTextColumn Header = "BB (%)" Binding = "{Binding BBBandwidth}" Width="60"/>

                            <!--
                            <DataGridTextColumn Header = "Trend 4H" Binding = "{Binding FourHourTrend}" Width="60"/>
                            <DataGridTextColumn Header = "Trend 1H" Binding = "{Binding OneHourTrend}" Width="60"/>
                            -->
                            <DataGridTextColumn Header = "4H Trend %" Binding = "{Binding FourHourTrend}" Width="60">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Setter Property="Background" Value="{Binding FourHourBrush, UpdateSourceTrigger=PropertyChanged}" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header = "1H Trend %" Binding = "{Binding OneHourTrend}" Width="60">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Setter Property="Background" Value="{Binding OneHourBrush, UpdateSourceTrigger=PropertyChanged}" />
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn Header="Action">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Open" Grid.Column="8" Click="SignalButton_Clicked"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>

                    </DataGrid>
                </TabItem>
                <TabItem Header="Trends">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>


                        <StackPanel Orientation="Horizontal" Grid.Row="0">
                            <Label Content="Global 4H Trend." />
                            <Label Content="{Binding FourHourTrendText}" ContentStringFormat="{}{00:P2}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Row="1">
                            <Label Content="Global 1H Trend." />
                            <Label Content="{Binding OneHourTrendText}" ContentStringFormat="{}{00:P2}" />
                        </StackPanel>

                        <DataGrid Name = "trendDataGrid" 
             AlternationCount = "2" AutoGenerateColumns="False" IsReadOnly="True" 
                                  ItemsSource="{Binding Symbols, UpdateSourceTrigger=PropertyChanged}" ScrollViewer.VerticalScrollBarVisibility="Visible" Grid.Row="2">

                            <DataGrid.Columns>
                                <DataGridTextColumn Header = "Symbol" Binding = "{Binding Symbol.MarketSymbol}" Width="80"/>
                                <!--
                                <DataGridTextColumn Header = "4H Date" Binding = "{Binding Trends[0].Candle.Timestamp}" Width="60"/>
                                <DataGridTextColumn Header = "4H Open" Binding = "{Binding Trends[0].Candle.OpenPrice}" Width="60"/>
                                <DataGridTextColumn Header = "4H Close" Binding = "{Binding Trends[0].Candle.ClosePrice}" Width="60"/>
                                <DataGridTextColumn Header = "4H Trend" Binding = "{Binding Trends[0].Trend}" Width="60"/>
                                -->


                                <DataGridTextColumn Header = "4H Trend %" Binding = "{Binding FourHourTrend, NotifyOnTargetUpdated=True}" Width="60">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Background" Value="{Binding FourHourBrush, UpdateSourceTrigger=PropertyChanged}" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header = "1H Trend %" Binding = "{Binding OneHourTrend, NotifyOnTargetUpdated=True}" Width="60">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Background" Value="{Binding OneHourBrush, UpdateSourceTrigger=PropertyChanged}" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>

                                <!--
                                <DataGridTextColumn Header = "1m candle" Binding = "{Binding Symbol.TimeframeCandles[1][0].Timestamp, NotifyOnTargetUpdated=True}" Width="60">
                                </DataGridTextColumn>

                                <DataGridTextColumn Header = "3m candle" Binding = "{Binding Symbol.TimeframeCandles[3][0].Timestamp, NotifyOnTargetUpdated=True}" Width="60">
                                    
                                </DataGridTextColumn>
                                -->
                                
                                <!--
                                <DataGridTextColumn Header = "4H Trend %" Binding = "{Binding FourHourTrendView.TrendString}" Width="60">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Background" Value="{Binding FourHourTrendView.TrendBrush, UpdateSourceTrigger=PropertyChanged}" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header = "1H Trend %" Binding = "{Binding OneHourTrendView.TrendString}" Width="60">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Setter Property="Background" Value="{Binding OneHourTrendView.TrendBrush, UpdateSourceTrigger=PropertyChanged}" />
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                                -->
                                <!--
                                <DataGridTextColumn Header = "1H Trend %" Binding = "{Binding Trends[1].Trend, StringFormat={}{00:P}}" Width="60">
                                    <DataGridTextColumn.CellStyle>
                                        <Style TargetType="{x:Type DataGridCell}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.RawText, Converter={StaticResource converter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                    <Setter Property="Background" Value="LimeGreen" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text, Converter={StaticResource converter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                                    <Setter Property="Background" Value="DarkOrange" />
                                                    <Setter Property="Foreground" Value="Black" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGridTextColumn.CellStyle>
                                </DataGridTextColumn>
                            -->
                            </DataGrid.Columns>

                        </DataGrid>
                    </Grid>
                </TabItem>

            </TabControl>


        </Grid>
        
        <StackPanel Grid.Row="3" Orientation="Horizontal" Background="#cccccc">
            <TextBlock VerticalAlignment="Center" Margin="5,5,5,5" Text="{Binding StatusText}">
            </TextBlock>
        </StackPanel>
    </Grid>

</Window>